<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="https://xingruiy.synology.me/feed.xml" rel="self" type="application/atom+xml" /><link href="https://xingruiy.synology.me/" rel="alternate" type="text/html" /><updated>2020-11-10T19:35:56-06:00</updated><id>https://xingruiy.synology.me/feed.xml</id><title type="html">Reality Super Charged</title><subtitle>This is a private website.</subtitle><entry><title type="html">Jekyll on Synology with Docker</title><link href="https://xingruiy.synology.me/jekyll/nas/2020/11/08/jekyll-on-synology.html" rel="alternate" type="text/html" title="Jekyll on Synology with Docker" /><published>2020-11-08T00:00:00-06:00</published><updated>2020-11-08T00:00:00-06:00</updated><id>https://xingruiy.synology.me/jekyll/nas/2020/11/08/jekyll-on-synology</id><content type="html" xml:base="https://xingruiy.synology.me/jekyll/nas/2020/11/08/jekyll-on-synology.html">&lt;p&gt;I recently bought a synology NAS (network attaching device) and the first thought came into my mind is to power a jekyll site on this thing.&lt;/p&gt;

&lt;p&gt;I had read some online articles on how to setup jekyll on a synology NAS but still ran into problems. The first thing I tried was to use the integrated docker solution. Docker works flawlessly on many APPs including GitLab. However whenever I ran docker with jekyll it always give me a “container unexpectedly stopped” error. I have to say the native docker APP on synology is really awkward to work with: For example, the “cmd” option is tucked away in a hidden place. As the result, I had to ssh into the NAS and ran docker directly from the terminal.&lt;/p&gt;

&lt;p&gt;However, upon doing this, the remote machine gave me an error:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This problem is simple enough to solve just by following this &lt;a href=&quot;https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket&quot;&gt;LINK&lt;/a&gt;. However, the next problem is a little bit more challenging. I tried running jekyll with&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker --rm -it --volume=&quot;${PWD}:/srv/jekyll&quot; jekyll/jekyll jekyll new my_website
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but got denied access because docker cannot create directories from inside the container. As a workaround I changed the permission of the current directory to allow all users accessing it, which is not ideal. After that, I was finally able to create and build my jekyll site with:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker --rm -it --volume=&quot;${PWD}:/srv/jekyll&quot; jekyll/jekyll jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${PWD}&lt;/code&gt; is where you store your website. Note that if you remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--rm&lt;/code&gt; option the container will appear in the synology docker APP later, which allows us to simply toggle it on and off from the docker station, neat! You can also give it a name by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--name&lt;/code&gt; option.&lt;/p&gt;

&lt;h1 id=&quot;update-1&quot;&gt;Update 1&lt;/h1&gt;

&lt;p&gt;As first I thought I could run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; to install missing gems from another container, e.g.:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker --rm -it --volume=&quot;${PWD}:/srv/jekyll&quot; jekyll/jekyll bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But this is &lt;strong&gt;not&lt;/strong&gt; the correct way. Containers are meant to be light-weight virtual machines running on their own file systems. By default bundle installs gems under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/gems&lt;/code&gt;, which is not exposed to the host system. To rebuild depandencies we need to either map it to a host volume, or rebuild the container from scratch&lt;/p&gt;

&lt;h1 id=&quot;update-2&quot;&gt;Update 2&lt;/h1&gt;

&lt;p&gt;To customise the default theme &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;, we can simply override any file we want by putting one with the same name under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/srv/jekyll&lt;/code&gt;. E.g., I am customisng the default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;header.html&lt;/code&gt; file to add support for math equations, like this one: $1+1=2$.&lt;/p&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference:&lt;/h1&gt;
&lt;p&gt;[1] &lt;a href=&quot;https://columns.chicken-house.net/2016/09/20/jekyll-on-nas/&quot;&gt;https://columns.chicken-house.net/2016/09/20/jekyll-on-nas/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket&quot;&gt;https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3] &lt;a href=&quot;https://dev.to/michael/compile-a-jekyll-project-without-installing-jekyll-or-ruby-by-using-docker-4184&quot;&gt;https://dev.to/michael/compile-a-jekyll-project-without-installing-jekyll-or-ruby-by-using-docker-4184&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="NAS" /><summary type="html">I recently bought a synology NAS (network attaching device) and the first thought came into my mind is to power a jekyll site on this thing.</summary></entry></feed>